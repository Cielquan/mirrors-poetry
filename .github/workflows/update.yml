name: main
on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set git user
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Clone poetry repo
        run: git clone https://github.com/python-poetry/poetry ../poetry

      - name: Compare version
        id: version_compare
        run: |
          newest_release=$(git -C ../poetry tag --list | tail -n1)
          current_release=$(cat .version)
          python3 -m pip install -U packaging
          is_newer=$(python3 -c 'import sys; from packaging import version; print(version.parse(sys.argv[1]) > version.parse(sys.argv[2]))' "$newest_release" "$current_release")
          echo "NEWEST_RELEASE=${newest_release}" >> $GITHUB_OUTPUT
          echo "IS_NEWER=${is_newer}" >> $GITHUB_OUTPUT
          echo "newest_release=${newest_release} current_release=${current_release} is_newer=${is_newer}"

      - name: Create new release
        id: create_new_release
        if: ${{ steps.version_compare.outputs.IS_NEWER }} == "True"
        run: |
          newest_release="${{ steps.version_compare.outputs.NEWEST_RELEASE }}"
          echo ${newest_release} > .version
          cat > setup.py << EOF
          from setuptools import setup
          setup(name='pre_commit_dummy_package', version='0.0.0', install_requires=['poetry==${newest_release}'])
          EOF
          echo y | cp ../poetry/.pre-commit-hooks.yaml .pre-commit-hooks.yaml
          git add .version setup.py .pre-commit-hooks.yaml
          git commit -m "${newest_release}"
          git tag -am "${newest_release}" ${newest_release}
          git remote set-url origin https://x-access-token:$GH_TOKEN@github.com/$GITHUB_REPOSITORY
          git push origin HEAD:refs/heads/main --tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
